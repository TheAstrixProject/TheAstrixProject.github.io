// Generated by CoffeeScript 1.10.0
(function() {
  var G, Planet, animate, clear, clicksRaw, draw, fps, framerate, planets, resize, sizeCanvas, tick;

  G = 9.81;

  framerate = 60;

  Planet = function(x, y) {
    this.X = x;
    this.Y = y;
    this.V = 0;
    this.sX = 100;
    return this.sY = 100;
  };

  fps = function(d) {
    return 1000 / d;
  };

  animate = function(p) {
    var apt, yBound;
    apt = G / framerate;
    yBound = $('#screen')[0].height - (p.sY / 2);
    p.V += apt;
    p.Y += p.V;
    if (p.Y > yBound) {
      p.Y = yBound;
      return p.V = -p.V;
    }
  };

  sizeCanvas = function() {
    var canvas;
    canvas = $('#screen')[0];
    canvas.style.width = '100%';
    canvas.style.height = '98%';
    canvas.width = canvas.offsetWidth;
    return canvas.height = canvas.offsetHeight;
  };

  clear = function() {
    var canvas, ctx;
    canvas = $('#screen')[0];
    ctx = canvas.getContext('2d');
    return ctx.clearRect(0, 0, canvas.width, canvas.height);
  };

  draw = function(p) {
    var canvas, ctx;
    canvas = $('#screen')[0];
    ctx = canvas.getContext('2d');
    return ctx.drawImage($('#POL')[0], p.X - (p.sX / 2), p.Y - (p.sY / 2), p.sX, p.sY);
  };

  resize = $(window).asEventStream('resize');

  clicksRaw = $('#screen').asEventStream('click');

  tick = Bacon.interval(fps(framerate));

  resize.onValue(sizeCanvas);

  planets = clicksRaw.scan([], function(a, e) {
    return a.concat(new Planet(e.offsetX, e.offsetY));
  });

  sizeCanvas();

  planets.sampledBy(tick).onValue(function(model) {
    var i, len, planet, results;
    clear();
    results = [];
    for (i = 0, len = model.length; i < len; i++) {
      planet = model[i];
      animate(planet);
      results.push(draw(planet));
    }
    return results;
  });

}).call(this);
